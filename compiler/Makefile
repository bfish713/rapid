
OCAMLC=ocamlc
OCAMLDEP=ocamldep
OCAMLLEX=ocamllex
OCAMLYACC=ocamlyacc

RAPID_OBJS = ast.cmo parser.cmo scanner.cmo compile.cmo generate.cmo rapid.cmo
PARSER_FILES = ast.cmo parser.cmo scanner.cmo test_parser.cmo
TARFILES = Makefile testall.sh scanner.mll parser.mly ast.ml interpret.ml compile.ml rapid.ml

all: clean rapid parser

rapid: $(RAPID_OBJS)
	$(OCAMLC) -o rapid $(RAPID_OBJS)

parser: $(PARSER_FILES)
	$(OCAMLC) -o parser $(PARSER_FILES)

test: parser parser_tests.sh
	./parser_tests.sh

scanner.ml: scanner.mll
	$(OCAMLLEX) scanner.mll

parser.ml parser.mli: parser.mly
	$(OCAMLYACC) parser.mly

%.cmo: %.ml
	$(OCAMLC) -w A -c $<

%.cmi: %.mli
	$(OCAMLC) -w A -c $<

rapid.tar.gz: $(TARFILES)
	cd .. && tar czf rapid/rapid.tar.gz $(TARFILES:%=rapid/%)

.PHONY: clean parser test all
clean:
	rm -f rapid microc parser parser.ml parser.mli scanner.ml testall.log \
		*.cmo *.cmi *.out *.diff

# Generated by ocamldep *.ml *.mli
ast.cmo :
ast.cmx :
compile.cmo : ast.cmo
compile.cmx : ast.cmx
generate.cmo :
generate.cmx :
interpret.cmo : ast.cmo
interpret.cmx : ast.cmx
parser.cmo : ast.cmo parser.cmi
parser.cmx : ast.cmx parser.cmi
rapid.cmo : scanner.cmo parser.cmi generate.cmo compile.cmo ast.cmo
rapid.cmx : scanner.cmx parser.cmx generate.cmx compile.cmx ast.cmx
scanner.cmo : parser.cmi
scanner.cmx : parser.cmx
semantics.cmo : ast.cmo
semantics.cmx : ast.cmx
test_parser.cmo : scanner.cmo parser.cmi ast.cmo
test_parser.cmx : scanner.cmx parser.cmx ast.cmx
parser.cmi : ast.cmo
